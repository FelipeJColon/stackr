% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/stacking_weights_crps.R
\name{stacking_weights_crps}
\alias{stacking_weights_crps}
\title{Model weighting by CRPS}
\usage{
stacking_weights_crps(
  predict_sample,
  y,
  K,
  R,
  T,
  S,
  lambda = NULL,
  gamma = NULL,
  dirichlet_alpha = 1.001
)
}
\arguments{
\item{true_values}{A vector with the true observed values of size n}

\item{lower}{vector of size n with the lower quantile of the given range}

\item{upper}{vector of size n with the upper quantile of the given range}

\item{interval_range}{the range of the prediction intervals. i.e. if you're
forecasting the 0.05 and 0.95 quantile, the interval_range would be 90.
Can be either a single number or a vector of size n, if the range changes
for different forecasrs to be scored.}

\item{verbose}{if TRUE, gives you feedback if your interval_range seems odd.}
}
\value{
vector with the scoring values
}
\description{
Model weights for stacking by CRPS. MISSING.
}
\examples{

seed = 1
model <- rstan::stan_model("stan/crps_test.stan")
K = 3 # number of models
R = 1 # number of regions
T = 10 # number of timesteps
S = 20 # number of predictive samples
## time point weights
lambda <- numeric(T)
for (t in 1:T) {
  # lambda[t] = 1.5 - (1 - (t + 0.0) /T)^2;
  lambda[t] = 1; # try equal weights for now
}
## region weights
gamma <- array(0, R)
for (r in 1:R) {
  gamma[r] <- 1.0 / R;
}

 y <- rnorm(T)

# create an example array
predict_sample_mat <- array(NA, c(T, R, S,K))
for (r in 1:R) {
  for (t in 1:T) {
    predict_sample_mat[t, r, , ] <- cbind(rnorm(S, 2, 1),
                                          rgamma(S, shape = 1),
                                          rnorm(S, 0.5, 2.4))
  }
}

stacking_weights_crps(predict_sample_mat, y, K, R, T, S)

}
\references{
Missing
}
